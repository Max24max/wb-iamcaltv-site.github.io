var pl = {"salt":"JOOuyR0LARAYGkJDuVeXeJaM/G/YMHvv8wure+SdcZ8=","iv":"1BiFh7bMhwyJue/WjCYtZg==","data":""};

var submitPass = document.getElementById('submitPass');
var passEl = document.getElementById('pass');
var invalidPassEl = document.getElementById('invalidPass');
var successEl = document.getElementById('success');
var contentFrame = document.getElementById('contentFrame');

if (pl === "") {
  submitPass.disabled = true;
  passEl.disabled = true;
  alert("This page is meant to be used with the encryption tool. It doesn't work standalone.");
}

function doSubmit(evt) {
  try {
    var decrypted = decryptFile(CryptoJS.enc.Base64.parse(pl.data), passEl.value, CryptoJS.enc.Base64.parse(pl.salt), CryptoJS.enc.Base64.parse(pl.iv));
    if (decrypted === "") throw "No data returned";

    // Set default iframe link targets to _top so all links break out of the iframe
    decrypted = decrypted.replace("<head>", "<head><base href=\".\" target=\"_top\">");

    srcDoc.set(contentFrame, decrypted);

    successEl.style.display = "inline";
    passEl.disabled = true;
    submitPass.disabled = true;
    setTimeout(function() {
      dialogWrap.style.display = "none";
    }, 1000);
  } catch (e) {
    invalidPassEl.style.display = "inline";
    passEl.value = "";
  }
}

submitPass.onclick = doSubmit;
passEl.onkeypress = function(e) {
  if (!e) e = window.event;
  var keyCode = e.keyCode || e.which;
  invalidPassEl.style.display = "none";
  if (keyCode == '13'){
    // Enter pressed
    doSubmit();
    return false;
  }
};

function decryptFile(contents, password, salt, iv) {
  var _cp = CryptoJS.lib.CipherParams.create({
    ciphertext: contents
  });
  var key = CryptoJS.PBKDF2(password, salt, { keySize: 256/32, iterations: 100 });
  var decrypted = CryptoJS.AES.decrypt(_cp, key, {iv: iv});

  return decrypted.toString(CryptoJS.enc.Utf8);
}
